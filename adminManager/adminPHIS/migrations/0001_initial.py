# Generated by Django 4.0 on 2022-06-14 13:36

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhisUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('firstname', models.CharField(blank=True, max_length=150)),
                ('lastname', models.CharField(blank=True, max_length=150)),
                ('startDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('about', models.TextField(blank=True, max_length=500, verbose_name='about')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menuname', models.CharField(max_length=200)),
                ('comment', models.TextField(max_length=400)),
                ('menustatus', models.CharField(default='active', editable=False, max_length=200)),
                ('menuupdated', models.DateTimeField(auto_now=True)),
                ('menucreated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Microservice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('microserviceName', models.CharField(max_length=200)),
                ('microserviceStatus', models.CharField(default='active', editable=False, max_length=200)),
                ('microserviceUpdated', models.DateTimeField(auto_now=True)),
                ('microserviceCreated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Submenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submenuname', models.CharField(max_length=200)),
                ('submenuroute', models.CharField(max_length=300)),
                ('submenudescription', models.CharField(max_length=200)),
                ('comment', models.TextField(max_length=400)),
                ('submenustatus', models.CharField(default='active', editable=False, max_length=200)),
                ('submenuupdated', models.DateTimeField(auto_now=True)),
                ('submenucreated', models.DateTimeField(auto_now_add=True)),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminPHIS.menu')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminPHIS.phisuser')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='menu',
            name='microservice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminPHIS.microservice'),
        ),
        migrations.AddField(
            model_name='menu',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminPHIS.phisuser'),
        ),
    ]
