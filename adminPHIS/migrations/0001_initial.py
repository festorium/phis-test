# Generated by Django 4.1.3 on 2024-02-24 05:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="PhisUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                ("firstname", models.CharField(blank=True, max_length=150)),
                ("lastname", models.CharField(blank=True, max_length=150)),
                ("auth_user_id", models.CharField(blank=True, max_length=150)),
                ("user_role", models.CharField(blank=True, max_length=2)),
                ("startDate", models.DateTimeField(default=django.utils.timezone.now)),
                ("following_data", models.JSONField(null=True)),
                (
                    "about",
                    models.TextField(blank=True, max_length=1000, verbose_name="about"),
                ),
                (
                    "profile_picture",
                    models.CharField(
                        default="/media/profiles/default.png", max_length=250
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AuthorApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("google_scholar", models.URLField(null=True, unique=True)),
                ("research_gate", models.URLField(null=True, unique=True)),
                ("scopus", models.URLField(null=True, unique=True)),
                ("pub_med", models.URLField(null=True, unique=True)),
                ("capic_status", models.CharField(blank=True, max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("P", "pending"),
                            ("D", "declined"),
                            ("A", "approved"),
                        ],
                        default="P",
                        max_length=2,
                    ),
                ),
                ("applied_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField(null=True)),
                ("number_followers", models.IntegerField(default=0)),
                ("followers_data", models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Menu",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("menuname", models.CharField(max_length=200)),
                ("comment", models.TextField(max_length=400)),
                ("menustatus", models.CharField(max_length=200)),
                ("menuupdated", models.DateTimeField(auto_now=True)),
                ("menucreated", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["menucreated"],
            },
        ),
        migrations.CreateModel(
            name="Microservice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("microserviceName", models.CharField(max_length=200)),
                (
                    "microserviceStatus",
                    models.CharField(default="active", editable=False, max_length=200),
                ),
                ("microserviceUpdated", models.DateTimeField(auto_now=True)),
                ("microserviceCreated", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["microserviceCreated"],
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("auth_user_id", models.CharField(blank=True, max_length=150)),
                ("content_post_id", models.CharField(blank=True, max_length=150)),
                ("post_title", models.CharField(max_length=200)),
                ("post_content", models.TextField()),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rolename", models.CharField(max_length=200)),
                ("roleshortname", models.CharField(max_length=200)),
                ("comment", models.TextField(max_length=400)),
                ("rolestatus", models.CharField(max_length=200)),
                ("roledescription", models.CharField(max_length=400)),
                ("roleupdated", models.DateTimeField(auto_now=True)),
                ("rolecreated", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["rolecreated"],
            },
        ),
        migrations.CreateModel(
            name="Submenu",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("submenuname", models.CharField(max_length=200)),
                ("submenuroute", models.CharField(max_length=300)),
                ("submenudescription", models.CharField(max_length=200)),
                ("comment", models.TextField(max_length=400)),
                ("submenustatus", models.CharField(max_length=200)),
                ("submenuupdated", models.DateTimeField(auto_now=True)),
                ("submenucreated", models.DateTimeField(auto_now_add=True)),
                (
                    "menu",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="adminPHIS.menu"
                    ),
                ),
                ("role", models.ManyToManyField(to="adminPHIS.role")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.AddField(
            model_name="menu",
            name="microservice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="adminPHIS.microservice"
            ),
        ),
        migrations.AddField(
            model_name="menu",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Followers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("author_email", models.EmailField(max_length=254, unique=True)),
                ("number_followers", models.IntegerField(default=0)),
                ("followers", models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
